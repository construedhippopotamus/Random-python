#-------------------------------------------------------------------------------
# Name:        permutations of a string
# Purpose:
#
# Author:      Jenny.Mital
#
# Created:     14/02/2018
# Copyright:   (c) Jenny.Mital 2018
#
#   number of possibilities = n(n-1)
#-------------------------------------------------------------------------------

def permutation(A):

    for i in range(0, len(A)):
        B = ''
        B+=A[i]
        #new string with A[i] removed
        C=A[:i]+A[i+1:]
        #print "i=", i
        for j in range(0, len(C)):
            while len(C)>0:
                #print(C[j], C[:j], C[j+1])

                B+= C[j] # + C[:j]+ C[j+1:]
                C = C[:j]+ C[j+1:]
                #print "B= ", B, " C= ", C
        print B


if __name__ == '__main__':

    A = 'DEFG'
    permutation(A)

"""
def permutation(A):
    B+=A[i]
    #new string with A[i] removed
    C=A[:i]+A[i+1:]

    return B, C


for i in range(0, len(A)):
    B = ''
    permutation(A)
    #print "i=", i
    for j in range(0, len(C)):
        while len(C)>0:
            permutation(C)

    print B

"""
